@model IEnumerable<TechnicalAssistanceViewModel>
@using Core.Entity
@using System.Security.Claims;

@{
    ViewData["Title"] = "Index";
    string searchString = Context.Request.Query["searchString"];
    bool assigned = bool.Parse(string.IsNullOrEmpty(Context.Request.Query["assigned"]) ? "false" : Context.Request.Query["assigned"]);

    string allTasksCssClass = (!assigned ? "btn btn-secondary active" : "btn btn-secondary");
    string AssignedTasksCssClass = (assigned ? "btn btn-secondary active" : "btn btn-secondary");

    var userId = User.Claims.Where(c => c.Type == ClaimTypes.Sid).First().Value;
}
<div class="ui medium header"> Lista de tareas</div>

<div class="ui three column grid">
    <div class="column">
        <a class="ui button small primary" asp-action="Create">
            <i class="plus icon"></i> Nueva Tarea
        </a>
    </div>
    <div class="column">

    </div>
    <div class="column">
        <form method="get" asp-action="Index" class="ui small search">
            <div class="ui icon input fluid">
                <input class="prompt" name="Search" type="text" value="@ViewBag.CurrentSearch" placeholder="buscar tarea...">
                <i class="search icon"></i>
            </div>
        </form>
    </div>
</div>
<div class="ui one column grid">
    <div class="column">
        <table class="ui striped small table">
            <thead>
                <tr>
                    <th>
                        Tarea @*@Html.DisplayNameFor(model => model.TaskName)*@
                    </th>
                    <th>
                        Registro @*@Html.DisplayNameFor(model => model.TaskDate)*@
                    </th>
                    <th>
                        Inicio @*@Html.DisplayNameFor(model => model.StartDate)*@
                    </th>
                    <th>
                        Fin @*@Html.DisplayNameFor(model => model.EndDate)*@
                    </th>
                    <th>
                        Estado @*@Html.DisplayNameFor(model => model.State)*@
                    </th>
                    <th>
                        Prioridad @*@Html.DisplayNameFor(model => model.Priority)*@
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (TechnicalAssistanceViewModel task in Model)
                {
                    <tr>
                        <td>
                            <a asp-controller="TechnicalAssistance" asp-action="Details" asp-route-id="@task.TaskId">@task.TaskName</a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => task.TaskDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => task.StartDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => task.EndDate)
                        </td>
                        <td>
                            @{
                                switch (task.State)
                                {
                                    case State.Pendiente:
                                        <label class="ui green">@Html.DisplayFor(modelItem => task.State)</label>
                                        break;
                                    case State.Iniciada:
                                        <label class="ui blue">@Html.DisplayFor(modelItem => task.State)</label>
                                        break;
                                    case State.Finalizada:
                                        <label class="ui grey">@Html.DisplayFor(modelItem => task.State)</label>
                                        break;
                                    case State.Deleted:
                                        <label class="ui red">@Html.DisplayFor(modelItem => task.State)</label>
                                        break;
                                    default:
                                        <label>@Html.DisplayFor(modelItem => task.State)</label>
                                        break;
                                }
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => task.Priority)
                        </td>
                        <td>
                            <a class="btn btn-link delete-link" asp-controller="TechnicalAssistance" asp-action="Delete" asp-route-taskid="@task.TaskId">
                                <i class="fas fa-trash-alt"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot class="full-width">
                <tr>
                </tr>
            </tfoot>
        </table>
    </div>
</div>

@*<select class="ui fluid dropdown" id="State" name="State" asp-items="Html.GetEnumSelectList<State>()">
    <option value="@null">- Todo -</option>
</select>
@foreach (State state in Enum.GetValues(typeof(State)))
{
    <label for="State" class="item">
        <input type="checkbox" name="State" />
        @state
    </label>
}*@